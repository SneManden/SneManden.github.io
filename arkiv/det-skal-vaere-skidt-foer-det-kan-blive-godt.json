{"slug":"det-skal-vaere-skidt-foer-det-kan-blive-godt","html":"<p>Jeg havde lige afsluttet et projekt (mit 3D WebGL spil <a href=\"/spil/foxescape\" rel=\"noopener noreferrer\">foxescape</a>)\nog havde naturligvis brug for at få det ud til verden. I et ualmindelig dumt\nøjeblik ender jeg med at overskrive databasen på min hjemmeside med en halvt\når ældre version. At rive sig selv i håret, og bande højlydt hjalp ikke meget.</p>\n<h2 id=\"problemet\">Problemet</h2>\n<p>Det værste ved episoden er nok, at jeg har versions kontrol på hjemmesiden, så\nhvordan kan det overhovedet ske? Altså, at man så ikke kan få de data tilbage?\nDet hænger sammen med en utroligt dårlig opsætning. Jeg har et repository på\nmit webhotel og lokalt på min computer. Så ændringer til hjemmesiden pusher jeg\nbare til webhotellet, og de fremtræder på Internettet. På webhotellet er det sat\nop sådan, at et <code>post-receive-hook</code> kopierer indholdet ind i den egentlige\ndirectory, som serveren serverer til klienten. Så ændringer foretaget fra\nadministrationsmodulet bliver ikke registreret af versions kontrollen, og bliver\nheller ikke synkroniseret med mit lokale repo.</p>\n<p>Så da jeg vælger at &quot;hardcode&quot; spilsiden ind på min hjemmeside &mdash; i\nstedet for at oprette en seperat side til det &mdash; bliver databasen åbenbart\noverskrevet med en gammel version. (Er det fordi jeg &quot;kom til&quot; at bruge\n<code>git add *</code>?) Det værste ved hele episoden var nok den erkendelsen af,\nat jeg <em>egentlig</em>, hvis jeg skal være helt ærlig, godt kendte til problemet.</p>\n<h2 id=\"fix-it\">Fix it!</h2>\n<p>Well, da jeg jo ikke har andet at lave (<code>&lt;/sarkame&gt;</code>) vælger jeg en ny løsning:\njeg skriver min hjemmeside om. Forleden, i forbindelse med at jeg så den\n<a href=\"https://archive.org/details/TheInternetsOwnBoyTheStoryOfAaronSwartz\" target=\"_blank\" rel=\"noopener noreferrer\">fremragende dokumentar om Aaron Swarts</a>, hans blogpost om\n<a href=\"http://www.aaronsw.com/weblog/000404\" target=\"_blank\" rel=\"noopener noreferrer\">statisk serverede hjemmesider</a> og blev mindet om, at det måske\nvar værd at prøve.</p>\n<p>Efter at have sonderet terrænet faldt jeg igen over <a href=\"http://flask.pocoo.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Flask</a>, et rigtig\nlækkert microframework til Python. Uden at vide det, har jeg endda en teori om,\nat det er inspireret af Aaron&#39;s eget, ufatteligt simple framework\n<a href=\"http://webpy.org/\" target=\"_blank\" rel=\"noopener noreferrer\">webpy</a>.</p>\n<h3 id=\"design\">Design</h3>\n<p>Væk med databasen, var min filosofi for rekreationen af &lt;snemanden.com&gt;.\nJeg ville benytte et simpel fil-baseret system, så det er hvad jeg gjorde.\nJeg er også stor fan af <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener noreferrer\">Markdown</a> og især med udviklingen af\nen noget tiltrængt &quot;standard&quot;, <a href=\"http://commonmark.org/\" target=\"_blank\" rel=\"noopener noreferrer\">CommonMark</a> er det en virkelig\nlækker måde at skrive HTML-compilér bare tekster.</p>\n<p>Hver blogpost er således en simpel markdown-fil, med en lille header. Denne\nindeholder variabel data, som fx titel, url, dato, forfatter, etc. Hér måtte\njeg naturligvis ty til Regular Expressions, som ved første øjekast kan ligne\nproduktet af en kats gang på et tastatur. Jeg kan i denne proces stærkt\nanbefale <a href=\"http://www.regexr.com/\" target=\"_blank\" rel=\"noopener noreferrer\">RegExr</a>.</p>\n<p>Og omtrent ~200 linjers pythonkode senere har jeg en fuldt funktionel blog og\nportofolio-side. Der er i skrivende stund stadig flere ting at gøre, før end at\njeg kan være tilfreds med min nye side. Bl.a.</p>\n<ul>\n<li>Kompilere alle HTML sider på forhånd (bruger lige nu\n<a href=\"http://jinja.pocoo.org/docs/dev/templates/\" target=\"_blank\" rel=\"noopener noreferrer\">Jinja2 rendering engine</a>)</li>\n<li>At mindske download-indtrykket af siden; dvs. bl.a. minify af stylesheets,\njavascript og komprimere billeder</li>\n<li>Gennemgå flask dokumentationen for generelle tips og tricks</li>\n<li>Bedre mobiltilpasning</li>\n</ul>\n<p>samt flere andre todo&#39;s.</p>\n<p>Alt i alt, er jeg ret imponeret over Flask frameworket, som er virkelig lækkert\nat arbejde med, og kræver minimal læring. Man føler bare at man skriver python,\nog bruger ikke tid på at skulle lære &quot;yet-another-framework&quot;.</p>\n","excerpt":"Jeg havde lige afsluttet et projekt (mit 3D WebGL spil <a href=\"/spil/foxescape\" rel=\"noopener noreferrer\">foxescape</a>)\nog havde naturligvis brug for at få det ud til verden. I et ualmindelig dumt\nøjeblik ender jeg med at overskrive databasen på min hjemmeside med en halvt\når ældre version. At rive sig selv i håret, og bande højlydt hjalp ikke meget.","title":"Det skal være skidt, før det kan blive godt","author":"Casper Kehlet Jensen","description":"Dårlig opsætning resulterer i tab af værdifuld information. Men det sætter også gang i en tiltrængt oprydningsproces...","warning":"Døde links!","draft":false,"published":{"year":2014,"month":9,"date":13,"timestamp":"2014-09-13"},"hide":false,"gallery_name":null,"gallery_position":"top","gallery":null}